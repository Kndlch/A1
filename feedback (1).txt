Hi, this is Anita Liu (al877), looking at your Assignment A1!

Please revise your A1 solution as we suggest below. Look at each point and revise
according to it before going on to the next. When done, resubmit. THEN SUBMIT A REQUEST
FOR A REGRADE, SAYING SIMPLY THAT YOU RESUBMITTED. This is how we will know to regrade it.
If we donâ€™t get this regrade request, there will be no easy way for us to know that you
resubmitted. Be sure you have set your notifications on the CMS so that you receive an
email when a grade has been changed.

1. get_value in toolbox.py:
    Within get_value, you call before_first and after_first. The preconditions for these
    two helper functions are different from the precondition of get_value. While get_value's
    "keyword" parameter precondition is "a string made with only alphanumerical characters
    that is a valid keyword in s," before_first and after_first "marker" parameter precondition
    is "a string of length 1."

    In line 141:
        after = after_first(s, keyword)
    "keyword" may have a length > 1, which violates the precondition of after_first.

2. test_before_first and test_after_first in tests.py:
    Test cases should consist of function calls using valid inputs. Your test on Line 53
    contained the "marker" input "+++" which violates the precondition. We only test on
    cases that satisfy preconditions. You are missing a test case for these two functions.
    In addition to testing multiple consecutive markers in a string, what if the markers
    were non-consecutive?

3. test_get_value in tests.py:
    You are missing a test case. What if there was only one key:value pair in the JSONLite?

Remember to resubmit and request a regrade!

===========

Start grading of Submissions/ebc68_mca74/toolbox.py

Grading A1 Functions
  Grading Part A (before/after functions)
  Finished Part A (before/after functions)

  Grading Part B (file_to_string)
  Finished Part B (file_to_string)

  Grading Part C (get_value)
    PRECONDITION VIOLATION found within `get_value`
    Traceback (most recent call last):
  File "a1grade/rubrik.py", line 606, in grade_C
    func+'('+','.join(repr(x) for x in test)+') is', sfunc(*test), afunc(*test), 4)
  File "Submissions/ebc68_mca74/toolbox.py", line 141, in get_value
    after = after_first(s, keyword)
  File "a1grade/toolbox.py", line 121, in after_first
    assert len(marker) == 1, f"marker {repr(marker)} does not have length 1"
AssertionError: marker 'name' does not have length 1

    PRECONDITION VIOLATION found within `get_value`
    Traceback (most recent call last):
  File "a1grade/rubrik.py", line 606, in grade_C
    func+'('+','.join(repr(x) for x in test)+') is', sfunc(*test), afunc(*test), 4)
  File "Submissions/ebc68_mca74/toolbox.py", line 141, in get_value
    after = after_first(s, keyword)
  File "a1grade/toolbox.py", line 121, in after_first
    assert len(marker) == 1, f"marker {repr(marker)} does not have length 1"
AssertionError: marker 'time' does not have length 1

    PRECONDITION VIOLATION found within `get_value`
    Traceback (most recent call last):
  File "a1grade/rubrik.py", line 606, in grade_C
    func+'('+','.join(repr(x) for x in test)+') is', sfunc(*test), afunc(*test), 4)
  File "Submissions/ebc68_mca74/toolbox.py", line 141, in get_value
    after = after_first(s, keyword)
  File "a1grade/toolbox.py", line 121, in after_first
    assert len(marker) == 1, f"marker {repr(marker)} does not have length 1"
AssertionError: marker 'name' does not have length 1

  Finished Part C (get_value)

Finished A1 Functions

Grading A1 Test Cases
  Grading Tests for before/after functions
    The procedure 'test_before_first' crashed when called.
    Traceback (most recent call last):
  File "a1grade/rubrik.py", line 431, in grade_test_A
    a1test.test_before_first()
  File "tests.py", line 53, in test_before_first
    # 2. marker at beginning
  File "a1grade/scorer.py", line 818, in <lambda>
    dst = lambda *x: (self.capture(*x), src(*x))[1]
  File "a1grade/toolbox.py", line 99, in before_first
    assert len(marker) == 1, f"marker {repr(marker)} does not have length 1"
AssertionError: marker '+++' does not have length 1
  Finished Tests for before/after functions

Finished A1 Test Cases

Grading Main script
  Grading A1 main script
  Finished A1 main script

Finished Main script

Grading style for toolbox.py
Finished style for toolbox.py

Grading style for tests.py
Finished style for tests.py

Grading style for main.py
Finished style for main.py

This assignment requires revisions.
